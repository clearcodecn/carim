// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/message.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddFriendRequest struct {
	SenderId             int64    `protobuf:"varint,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ToId                 int64    `protobuf:"varint,2,opt,name=toId,proto3" json:"toId,omitempty"`
	SenderNo             string   `protobuf:"bytes,3,opt,name=senderNo,proto3" json:"senderNo,omitempty"`
	ToNo                 string   `protobuf:"bytes,4,opt,name=toNo,proto3" json:"toNo,omitempty"`
	Head                 string   `protobuf:"bytes,5,opt,name=head,proto3" json:"head,omitempty"`
	Nickname             string   `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFriendRequest) Reset()         { *m = AddFriendRequest{} }
func (m *AddFriendRequest) String() string { return proto.CompactTextString(m) }
func (*AddFriendRequest) ProtoMessage()    {}
func (*AddFriendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33f3a5e1293a7bcd, []int{0}
}

func (m *AddFriendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendRequest.Unmarshal(m, b)
}
func (m *AddFriendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendRequest.Marshal(b, m, deterministic)
}
func (m *AddFriendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendRequest.Merge(m, src)
}
func (m *AddFriendRequest) XXX_Size() int {
	return xxx_messageInfo_AddFriendRequest.Size(m)
}
func (m *AddFriendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendRequest proto.InternalMessageInfo

func (m *AddFriendRequest) GetSenderId() int64 {
	if m != nil {
		return m.SenderId
	}
	return 0
}

func (m *AddFriendRequest) GetToId() int64 {
	if m != nil {
		return m.ToId
	}
	return 0
}

func (m *AddFriendRequest) GetSenderNo() string {
	if m != nil {
		return m.SenderNo
	}
	return ""
}

func (m *AddFriendRequest) GetToNo() string {
	if m != nil {
		return m.ToNo
	}
	return ""
}

func (m *AddFriendRequest) GetHead() string {
	if m != nil {
		return m.Head
	}
	return ""
}

func (m *AddFriendRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

type AddFriendReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddFriendReply) Reset()         { *m = AddFriendReply{} }
func (m *AddFriendReply) String() string { return proto.CompactTextString(m) }
func (*AddFriendReply) ProtoMessage()    {}
func (*AddFriendReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_33f3a5e1293a7bcd, []int{1}
}

func (m *AddFriendReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddFriendReply.Unmarshal(m, b)
}
func (m *AddFriendReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddFriendReply.Marshal(b, m, deterministic)
}
func (m *AddFriendReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddFriendReply.Merge(m, src)
}
func (m *AddFriendReply) XXX_Size() int {
	return xxx_messageInfo_AddFriendReply.Size(m)
}
func (m *AddFriendReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddFriendReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddFriendReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AddFriendRequest)(nil), "AddFriendRequest")
	proto.RegisterType((*AddFriendReply)(nil), "AddFriendReply")
}

func init() { proto.RegisterFile("proto/message.proto", fileDescriptor_33f3a5e1293a7bcd) }

var fileDescriptor_33f3a5e1293a7bcd = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x03, 0xf3, 0x94, 0x16, 0x31, 0x72,
	0x09, 0x38, 0xa6, 0xa4, 0xb8, 0x15, 0x65, 0xa6, 0xe6, 0xa5, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16,
	0x97, 0x08, 0x49, 0x71, 0x71, 0x14, 0xa7, 0xe6, 0xa5, 0xa4, 0x16, 0x79, 0xa6, 0x48, 0x30, 0x2a,
	0x30, 0x6a, 0x30, 0x07, 0xc1, 0xf9, 0x42, 0x42, 0x5c, 0x2c, 0x25, 0xf9, 0x9e, 0x29, 0x12, 0x4c,
	0x60, 0x71, 0x30, 0x1b, 0xa1, 0xde, 0x2f, 0x5f, 0x82, 0x59, 0x81, 0x51, 0x83, 0x33, 0x08, 0xce,
	0x87, 0xa8, 0xf7, 0xcb, 0x97, 0x60, 0x01, 0x8b, 0x83, 0xd9, 0x20, 0xb1, 0x8c, 0xd4, 0xc4, 0x14,
	0x09, 0x56, 0x88, 0x18, 0x88, 0x0d, 0x32, 0x23, 0x2f, 0x33, 0x39, 0x3b, 0x2f, 0x31, 0x37, 0x55,
	0x82, 0x0d, 0x62, 0x06, 0x8c, 0xaf, 0x24, 0xc0, 0xc5, 0x87, 0xe4, 0xc6, 0x82, 0x9c, 0x4a, 0x23,
	0x3b, 0x2e, 0x6e, 0xe7, 0xc4, 0x22, 0xcf, 0xdc, 0x80, 0xd2, 0xe2, 0x8c, 0xd4, 0x22, 0x21, 0x7d,
	0x2e, 0x4e, 0xb8, 0x02, 0x21, 0x41, 0x3d, 0x74, 0x0f, 0x49, 0xf1, 0xeb, 0xa1, 0xea, 0x77, 0x62,
	0x8f, 0x62, 0x05, 0xfb, 0x3f, 0x89, 0x0d, 0x4c, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x7c,
	0x1b, 0x87, 0xbf, 0x1d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CarImPusherClient is the client API for CarImPusher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CarImPusherClient interface {
	AddFriend(ctx context.Context, in *AddFriendRequest, opts ...grpc.CallOption) (*AddFriendReply, error)
}

type carImPusherClient struct {
	cc *grpc.ClientConn
}

func NewCarImPusherClient(cc *grpc.ClientConn) CarImPusherClient {
	return &carImPusherClient{cc}
}

func (c *carImPusherClient) AddFriend(ctx context.Context, in *AddFriendRequest, opts ...grpc.CallOption) (*AddFriendReply, error) {
	out := new(AddFriendReply)
	err := c.cc.Invoke(ctx, "/CarImPusher/AddFriend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarImPusherServer is the server API for CarImPusher service.
type CarImPusherServer interface {
	AddFriend(context.Context, *AddFriendRequest) (*AddFriendReply, error)
}

// UnimplementedCarImPusherServer can be embedded to have forward compatible implementations.
type UnimplementedCarImPusherServer struct {
}

func (*UnimplementedCarImPusherServer) AddFriend(ctx context.Context, req *AddFriendRequest) (*AddFriendReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFriend not implemented")
}

func RegisterCarImPusherServer(s *grpc.Server, srv CarImPusherServer) {
	s.RegisterService(&_CarImPusher_serviceDesc, srv)
}

func _CarImPusher_AddFriend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFriendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarImPusherServer).AddFriend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CarImPusher/AddFriend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarImPusherServer).AddFriend(ctx, req.(*AddFriendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CarImPusher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CarImPusher",
	HandlerType: (*CarImPusherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFriend",
			Handler:    _CarImPusher_AddFriend_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/message.proto",
}
